version: '3'

services:


  nginx:
    build:
      context: .
      dockerfile: nginx.dockerfile
    networks:
     - nodeapp-network
    volumes:
     - ./nginx/:/etc/nginx/
     - ./nginx/conf.nginx:/etc/nginx/nginx.conf
     - ./Backend/Compiled/dist/:/etc/nginx/html/app1/
    ports:
     - '80:80'
    depends_on:
      - node

  redis:
    image: redis
    networks:
     - nodeapp-network
   # depends_on:
     # - postgres


  postgres:
    build:
      context: .
      dockerfile: postgres.dockerfile
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: MyNewPass
      POSTGRES_DB: root
      DB_USER: meeseeks
      DB_PASS: MEESEEKS
      DB_NAME: pinit
      DB_NAME2: test
    ports:
     - "5432:5432"
    networks:
     - nodeapp-network

  node:
    build:
      context: .
      dockerfile: node.dockerfile
   # command: ["npm", "run-script","mocha"]
    command: ["pm2-dev","start","pm2.config.json"]
    environment:
    #  NODE_ENV: test
      NODE_ENV: development
    depends_on:
     - postgres
     - redis
    volumes:
      - ./Backend/Compiled/:/var/www/
      - /var/www/node_modules
      - ./Backend/package.json:/var/www/package.json
      - ./Backend/pm2.config.json:/var/www/pm2.config.json
      - ./Backend/database/Images.proto:/var/www/database/Images.proto
#    ports:
#     - "3000:3000"
    networks:
     - nodeapp-network


networks:
  nodeapp-network:
    driver: bridge
